{
  "name": "Chatlish",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 10
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -976,
        0
      ],
      "id": "fe777755-4808-4d86-83b5-1345906b51ce",
      "name": "Schedule Trigger"
    },
    {
      "parameters": {
        "from": "whatsapp:+14155238886",
        "message": "={{ $json.body }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        272,
        -96
      ],
      "id": "131bb243-f283-4217-9305-79d6e49989db",
      "name": "Send an SMS/MMS/WhatsApp message",
      "credentials": {
        "twilioApi": {
          "id": "VOtE64ACBpN69Ay2",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "operation": "append",
        "documentId": {
          "__rl": true,
          "value": "1da6tF-BwwecrBhnjklKlRx0Zz7yFufHO-99Qgkhj5RM",
          "mode": "list",
          "cachedResultName": "wordofday",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1da6tF-BwwecrBhnjklKlRx0Zz7yFufHO-99Qgkhj5RM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1da6tF-BwwecrBhnjklKlRx0Zz7yFufHO-99Qgkhj5RM/edit#gid=0"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Word": "={{ $json.word }}",
            "Meaning": "={{ $json.meaning }}",
            "Plural": "={{ $json.plural }}",
            "Exemple Sentence": "={{ $json.example }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Word",
              "displayName": "Word",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Meaning",
              "displayName": "Meaning",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Plural",
              "displayName": "Plural",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Exemple Sentence",
              "displayName": "Exemple Sentence",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        128,
        112
      ],
      "id": "4bd6667b-a5d7-4da3-9849-331c21ed156e",
      "name": "Append row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3q4oh8aF3SMveW7b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1da6tF-BwwecrBhnjklKlRx0Zz7yFufHO-99Qgkhj5RM",
          "mode": "list",
          "cachedResultName": "wordofday",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1da6tF-BwwecrBhnjklKlRx0Zz7yFufHO-99Qgkhj5RM/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1da6tF-BwwecrBhnjklKlRx0Zz7yFufHO-99Qgkhj5RM/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.6,
      "position": [
        -800,
        0
      ],
      "id": "b45f9406-f4b5-48b0-b58b-db71ec2d6ef9",
      "name": "Get row(s) in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3q4oh8aF3SMveW7b",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const words = items.map(item => item.json.Word).filter(Boolean);\n\nconst wordList = words.join(\", \");\n\nreturn [\n  {\n    json: {\n      wordList\n    }\n  }\n];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -624,
        0
      ],
      "id": "227d5719-637e-40e9-a1aa-d9660e817306",
      "name": "wordList"
    },
    {
      "parameters": {
        "jsCode": "const content = items[0].json.choices[0].message.content;\n\n// نجيب نص الـ Conversation Topic كامل مع الأسئلة\nconst conversationMatch = content.match(/- Conversation topic:\\s*([\\s\\S]*?)(- Multiple Choice Questions:|$)/i);\nlet conversationTopic = conversationMatch ? conversationMatch[1].trim() : \"\";\n\n// نجيب نص الـ Quiz Questions كامل\nconst quizMatch = content.match(/- Multiple Choice Questions:\\s*([\\s\\S]*)/i);\nconst quizQuestions = quizMatch ? quizMatch[1].trim() : \"\";\n\n// لو داخل الـ conversationTopic في أسئلة (عادة تبدأ بـ \"Question 1:\" أو \"- Question 1:\" أو \"1.\" )، مننقيها\nconst questionPattern = /-?\\s*Question\\s*\\d+[:.]/gi;\nif (questionPattern.test(conversationTopic)) {\n  // إزالة الأسئلة من الـ conversationTopic\n  conversationTopic = conversationTopic.split(questionPattern)[0].trim();\n}\n\n// باقي الاستخراجات القديمة:\nconst wordMatch = content.match(/- Word:\\s*(.*)/i);\nconst word = wordMatch ? wordMatch[1].trim() : \"\";\n\nconst meaningMatch = content.match(/- Meaning:\\s*([\\s\\S]*?)(- Plural form:|- Example sentence:)/i);\nconst meaning = meaningMatch ? meaningMatch[1].trim().replace(/\\n/g, ' ') : \"\";\n\nconst pluralMatch = content.match(/- Plural form:\\s*([\\s\\S]*?)(- Example sentence:|- Pronunciation guide:|- Conversation topic:)/i);\nconst plural = pluralMatch ? pluralMatch[1].trim().replace(/\\n/g, ' ') : \"\";\n\nconst exampleMatch = content.match(/- Example sentence:\\s*\"(.*)\"/i);\nconst example = exampleMatch ? exampleMatch[1].trim() : \"No example sentence provided.\";\n\n// نبني الرسالة النهائية بفصل واضح بين كل جزء\nconst fullMessage = \n  `Word: ${word}\\n\\n` +\n  `Meaning: ${meaning}\\n\\n` +\n  `Plural form: ${plural}\\n\\n` +\n  `Example sentence: ${example}\\n\\n` +\n  `Conversation Topic:\\n${conversationTopic}\\n\\n` +\n  `Multiple Choice Questions:\\n${quizQuestions}`;\n\nreturn [\n  {\n    json: {\n      body: fullMessage,\n      word,\n      meaning,\n      plural,\n      example,\n      conversationTopic,\n      quizQuestions,\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -304,
        0
      ],
      "id": "0c9ed7cc-b973-46ed-9acb-6c8d5649a8fc",
      "name": "Extract Word Info"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://openrouter.ai/api/v1/chat/completions",
        "authentication": "predefinedCredentialType",
        "nodeCredentialType": "openRouterApi",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "application/json"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={\n  \"model\": \"mistralai/mistral-7b-instruct\",\n  \"messages\": [\n    {\n      \"role\": \"user\",\n      \"content\": \"The following words have already been used: {{ $json.wordList }}.\\n\\n1. Generate a new English Word of the Day that is NOT in the list above. Include:\\n- Word\\n- Meaning\\n- Plural form (if any, or say 'No plural form')\\n- Example sentence (in quotes)\\n\\n2. Based on the words in the list above (not the new word), generate:\\n- One short conversation topic that uses 2 or more of the words\\n- Two multiple choice quiz questions (each with 4 options) using those words\\n\\n3. For the new word, include a pronunciation guide using simple English words (not phonetic symbols).\\n\\nFormat the response exactly like this:\\n\\n- Word: [word]\\n- Meaning: [meaning]\\n- Plural form: [plural form]\\n- Example sentence: \\\"[example sentence]\\\"\\n- Pronunciation guide: [pronunciation guide]\\n- Conversation topic:\\n[conversation topic]\\n- Multiple Choice Questions:\\n[quiz question 1]\\n[quiz question 2]\"\n    }\n  ]\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -464,
        0
      ],
      "id": "e05a42b3-9988-472e-bd8d-a7f550f761dc",
      "name": "Fetch New Word",
      "credentials": {
        "openRouterApi": {
          "id": "oCvFrKjvmxIOO4WS",
          "name": "OpenRouter account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const message = $json[\"body\"]; \nconst maxLength = 1500; \n\nconst parts = [];\nfor (let i = 0; i < message.length; i += maxLength) {\n  parts.push(message.slice(i, i + maxLength));\n}\n\nreturn parts.map(part => ({ body: part }));"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -16,
        -112
      ],
      "id": "e805ce23-4af7-4bb4-aae8-491e27f9a225",
      "name": "Slice"
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "twilio-whatsapp-reply",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        -944,
        208
      ],
      "id": "b365f0c5-6252-4d8f-a4f3-7a60acad8505",
      "name": "Webhook3",
      "webhookId": "46f75679-a826-4cbe-812e-1c1b2689cdec"
    },
    {
      "parameters": {
        "from": "whatsapp:+14155238886",
        "to": "={{ $('Webhook3').item.json.body.From }}",
        "message": "={{ $json.output }}",
        "options": {}
      },
      "type": "n8n-nodes-base.twilio",
      "typeVersion": 1,
      "position": [
        -144,
        208
      ],
      "id": "1c163b19-fc85-454b-a50f-0f8826de3af7",
      "name": "Send an SMS/MMS/WhatsApp message4",
      "credentials": {
        "twilioApi": {
          "id": "VOtE64ACBpN69Ay2",
          "name": "Twilio account"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $json.body?.From || $('Webhook3').item.json.body?.From || \"default-session\" }}",
        "contextWindowLength": 10
      },
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -528,
        384
      ],
      "id": "c39511fc-4053-497e-a3b9-c83d8209cfb5",
      "name": "Simple Memory"
    },
    {
      "parameters": {
        "model": "mistralai/mistral-7b-instruct",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        -624,
        400
      ],
      "id": "9bc466b6-c98a-4bdf-a79a-17215726cafa",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "oCvFrKjvmxIOO4WS",
          "name": "OpenRouter account 2"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{$json.body.Body }}",
        "options": {
          "systemMessage": ""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -608,
        208
      ],
      "id": "02a16703-9459-4ba5-bd6c-50c6b99cceec",
      "name": "AI Agent"
    }
  ],
  "pinData": {},
  "connections": {
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Get row(s) in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get row(s) in sheet": {
      "main": [
        [
          {
            "node": "wordList",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "wordList": {
      "main": [
        [
          {
            "node": "Fetch New Word",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Word Info": {
      "main": [
        [
          {
            "node": "Slice",
            "type": "main",
            "index": 0
          },
          {
            "node": "Append row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Fetch New Word": {
      "main": [
        [
          {
            "node": "Extract Word Info",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Slice": {
      "main": [
        [
          {
            "node": "Send an SMS/MMS/WhatsApp message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Webhook3": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "Send an SMS/MMS/WhatsApp message4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send an SMS/MMS/WhatsApp message4": {
      "main": [
        []
      ]
    }
  },
  "active": true,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "562e912e-9ce4-4d24-bb3b-6ba63915426c",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "43090347d693969c14f595bf40bcb58f33c4f6978eebc5d043ae9ab07381f706"
  },
  "id": "m0w6dPI71AYQEFeE",
  "tags": []
}